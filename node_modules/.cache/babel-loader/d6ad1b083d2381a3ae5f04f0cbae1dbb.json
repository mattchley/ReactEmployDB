{"ast":null,"code":"var _jsxFileName = \"/Users/matthewatchley/Desktop/reactpractice/src/components/SearchResultContainer.js\";\nimport React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport API from \"../utils/API\";\n\nclass SearchResultContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // can be called searchTerm\n      search: \"\",\n      results: []\n    };\n\n    this.searchGiphy = query => {\n      API.search(query).then(res => this.setState({\n        results: res.data.data\n      })).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchGiphy(this.state.search);\n    };\n  }\n\n  // When this component mounts, search the Giphy API for pictures of kittens\n  componentDidMount() {\n    this.searchGiphy(\"kittens\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(SearchForm // remember the parts on the right are defined up top and can be named whatever to call an aciton or value\n    // right values could be search Term, same, handle search change\n    , {\n      search: this.state.search,\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(ResultList, {\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchResultContainer;","map":{"version":3,"sources":["/Users/matthewatchley/Desktop/reactpractice/src/components/SearchResultContainer.js"],"names":["React","Component","SearchForm","ResultList","API","SearchResultContainer","state","search","results","searchGiphy","query","then","res","setState","data","catch","err","console","log","handleInputChange","event","name","target","value","handleFormSubmit","preventDefault","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,qBAAN,SAAoCJ,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC5CK,KAD4C,GACpC;AACN;AACAC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADoC;;AAAA,SAY5CC,WAZ4C,GAY9BC,KAAK,IAAI;AACrBN,MAAAA,GAAG,CAACG,MAAJ,CAAWG,KAAX,EACGC,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEI,GAAG,CAACE,IAAJ,CAASA;AAApB,OAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,KAhB2C;;AAAA,SAkB5CG,iBAlB4C,GAkBxBC,KAAK,IAAI;AAC3B,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,YAAME,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACA,WAAKV,QAAL,CAAc;AACZ,SAACQ,IAAD,GAAQE;AADI,OAAd;AAGD,KAxB2C;;AAAA,SA2B5CC,gBA3B4C,GA2BzBJ,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKhB,WAAL,CAAiB,KAAKH,KAAL,CAAWC,MAA5B;AACD,KA9B2C;AAAA;;AAO5C;AACAmB,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,WAAL,CAAiB,SAAjB;AACD;;AAsBDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD,CACA;AACA;AAFA;AAGE,MAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWC,MAHrB;AAIE,MAAA,gBAAgB,EAAE,KAAKiB,gBAJzB;AAKE,MAAA,iBAAiB,EAAE,KAAKL,iBAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AA7C2C;;AAgD9C,eAAeH,qBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport API from \"../utils/API\";\n\nclass SearchResultContainer extends Component {\n  state = {\n    // can be called searchTerm\n    search: \"\",\n    results: []\n  };\n\n  // When this component mounts, search the Giphy API for pictures of kittens\n  componentDidMount() {\n    this.searchGiphy(\"kittens\");\n  }\n\n  searchGiphy = query => {\n    API.search(query)\n      .then(res => this.setState({ results: res.data.data }))\n      .catch(err => console.log(err));\n  };\n// can be named handle search change\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, search the Giphy API for `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchGiphy(this.state.search);\n  };\n\n  render() {\n    return (\n      <div>\n        <SearchForm\n        // remember the parts on the right are defined up top and can be named whatever to call an aciton or value\n        // right values could be search Term, same, handle search change\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <ResultList results={this.state.results} />\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n"]},"metadata":{},"sourceType":"module"}